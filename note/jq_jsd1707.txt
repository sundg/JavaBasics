JQUERY
第一章   JQuery基础
1.1 定义
	是一个又快又小且多功能更高效的javascript库包
	基于JS的加强版动态编程语言
	快--->对比JS，超快超方便的开发速度和效率，JQ超精简
	小--->用JS语言去编写一个升级版封装版的JS开发语言，不超过100k
	多功能--->JQ已经取代JS成为世界上最流行的网页动态编程语言
		JQ--->不仅仅是世界最流行的语言
		--->Jquery插件库可以无缝对接标准的Jquery插件，已经成为动态编程语言的平台，类似APP STORE
js+html+css--->jq+h5+c3
1.2 设计理念 
	1、write less，do more
	--->JQ极大的简化了JS的开发代码，用最少的代码却能实现更多的功能
	2、封装了JS的函数，提供一个简单的开发模式，提供一系列重写的JQ方法体系
1.3、创始人
		JQuery的创始人John，2006年创建JQuery，当时一发布便轰动了整个WEB工业界，随后进入了快速发展的11年
1.4 JQ开发环境
	1)去官网下载一个最新的库包
		a、开发者版本
		jquery-版本号--->有源代码可以学习
		b、发布版本
		jquery-版本号-min--->最小的压缩包
	2)开发环境
		a、引入包
		b、第一个案例
			$(document).ready(function(){
				alert("第一个JQuery案例");
			});
1.5 Jquery基本语法
1.5.1语法公式：
		$(selector/js_obj).action(function);
		$--->Jquery
		selector/js_obj--->获取需要修改的标签对象集合
		action--->JQuery方法和事件
				方法-->实现功能
				事件-->调用处理的函数(建议使用匿名函数)
1.5.2 工厂函数$()--->产生JQuery对象
	1)转换JS对象
		如：$(document)  JQuery文档全局对象
		js，jq各自拥有一套方法体系，不可混用
		js--->DOM HTML  CSS EVENT NODE
		jq--->JQ DOM HTML  CSS EVENT NODE
	2)选择器--->类似于CSS
		$("h1")--->获取并返回页面上所有的h1标签对象，且产生的是JQuery的h1对象
	$(选择器) or $(js对象)--->产生或转换成jq对象.jq方法体系

1、js与jq互相转换
2、jq常用方法css();next();show();hide();	

1.5.3 JQuery常用方法
	a、css()--->获取或改变标签对象样式，声明1个或者多个原生CSS属性
		如：
		设置：
			css(CSS属性,值);
			css({属性1:值,属性2:值,属性3:值,.....n});	
		获取：
			css("属性");
	b、next() &  prev()
	   next()--->获取当前对象的下一个同辈标签对象(跨标签，基于同一个父标签)
	   prev()--->.......上一个....
	c、html() & text()--->获取或者修改标签对象内部结构及文本
		html(),text()无参时--->获取内部结构及文本   文本
		html(),text()有参时--->设置内部结构及文本   文本	
		类似于innnerHTML,innnerText
	d、show() & hide()
		show()--->当前标签显示
		hide()--->当前标签隐藏
	补充：
		JQ代码作用域都是基于它的页面加载事件当中
		ready()--->页面加载事件<---js body onload
		JQ对象.事件方法(func);		jq.ready()
			func--->函数名/匿名函数体
		JQ对象.方法体系的方法;		jq.css()
	补充：
		JQ的方式和事件必须在JQ作用域(母方法)内才会有效，JS的内容无限制
1.6 JQ和JS的相互转换
	1)js-->jq
		使用工厂函数：
		语法案例：
			var h1_obj=document.getEle...
			var $abc=$(h1_obj);
	2)jq--->js
		a、索引转化方式
			语法案例：
				//var abc=document.getElementByTagName("p");
				var $abc=$("p");获取所有p标签对象
				var p_01_obj=$abc[0];
				p_01_obj(JS对象)-->DOM HTML,EVENT,NODE,CSS
		b、get方法
			var $abc=$("h2");
			var h2_03_obj=$abc.get(2);//从0开始
			h2_03_obj(JS对象)-->DOM HTML,EVENT,NODE,CSS
		在JS作用域，JQ,JS的方法体系均可使用，但是事件体系必须要分开作用域
案例：12个列表项做彩虹
	要求：1-3  jq   4-6 转js  7-9 jq 10-12 js
		
第二章 JQuery选择器
2.1 定义
	精确获取特定的一个或者多个标签对象集合表达式
2.2 分类
	1、基本选择器(类CSS选择器)
		a、ID选择器     b、类选择器   c、标签    d、属性  e、后代
	2、高级选择器(JQ独有的过滤器)
		a、基本过滤   b、可见性过滤  c、表单过滤  d、其他过滤
2.3 基本选择器
2.3.1 当前标签对象选择器
	表达式：$(this)通常在事件中使用，指代触发事件的标签对象
2.3.2 标签选择器
	表达式：$(标签关键字)-->获取页面所有的标签关键字的对象集合
2.3.3 类选择器
	表达式：$(".abc")--->获取标签class属性值匹配的标签对象集合
2.3.4 ID选择器
	表达式：$("#abc")--->获取标签id属性值匹配的标签对象集合(约定俗成，唯一一个)
2.3.5 属性选择器(id,class加强版)
	任意属性都可以成为获取标签对象的检索条件
	语法：
		(option)selector[属性=条件]
		[属性]获取声明了该属性的标签对象集合
		[src]--->获取图片
		[属性=值] 属性的值匹配的
		[属性*=值] 属性包含的值	
		[属性$=值] 属性以设定值结尾的
		[属性^=值] 属性以设定值开头的
		selector[属性=值] 增加一个选择器的限制条件，获取同时满足2个条件的				
2.3.6 并集
	满足任意一个选择器表达式即可，多表达式用逗号隔开
	语法案例：
		标准：$("p,h1,h2,h3").css(...);
		复杂：$("p,.abc,#vv,h1[name='hh2']").css(...);				
2.3.7 后代
	语法案例：
		div p 子子孙孙  		div>p    only儿子
		$("div p")--->获取子子孙孙(前者是祖，后者为子孙)
		$("div>p")--->获取所有的儿子p(前者是祖，后者为儿子)	
2.3.8 交集--->获取同时满足2个条件的
	语法案例：
		$("p.abc") $("p#abc")
		div   div  div
		h1 h2 h3 				
2.4 高级选择器
2.4.1 基本过滤器
	第一组：首尾
		:first
		:last
	语法：
		追加表达式后面
	案例：
		$("p:first")-->获取页面第一个段落
	第二组：奇偶
		:even 偶数行  索引从0开始
		:odd  奇数行
	语法案例：
		$("p:even").css(....)		
	第三组：大小
		:eq(index)--->获取第几个标签对象(精准定位)
		:gt(index)--->获取大于索引的标签对象
		:lt(index)--->...小于...
	案例：1、小于3的li  cyan   大于3的li  deeppink
		  等于3的li  greenyellow
	第四组：全局
		:header--->获取页面所有标题对象h1~h6
		:contains(value)--->获取文本内容含有value的标签对象
	结论：
		JQ已经可以从标签关键字、标签属性以及标签文本三维空间检索指定的标签对象集合
	案例：
		第7个li添加单击事件背景橙色，字体天蓝
			
2.4.2 可见性过滤器
	:visible--->获取所有可见的标签对象集合
	:hidden--->获取所有不可见的标签对象集合
2.4.3 表单过滤器
	:button--->获取按钮对象集合
	:text--->...文本框...			
	:checkbox--->...复选框...
	注册表单：
		用户名 密码  专长
	补充:jq html dom
		html()  text()
		val():用于获取或设置表单标签对象的值
			无参--->获取
			有参--->设置
		案例：
			给文本框--->hello 未来iphone X
			多行文本框--->苹果首席体验官 日薪水3万人名币
			复选框--->全选
	attr():用于获取或设置标签对象那个的属性(HTML自带)	
		无参--->获取
			attr("checked HTML属性");
		有参--->设置
			单个属性的设置 jq.attr("src","...xxx")   jq.attr("checked",true)	
			多个属性的设置attr({属性1:值,属性2:值,属性3:值,.....n})

第三章 JQuery事件
3.1 定义
	jquery针对页面标签对象不同的行为作出相应的响应处理
3.2 事件分类
	1) 鼠标事件 click  dblclick  mouseover  mouseout
	2)键盘事件	keyup  keydown  keypress
	3)状态事件     ready  blur  foucs  change
3.3 事件对象event,this
	this--->当前触发事件的标签对象
	event--->记录触发当前事件的信息
	案例：
		text---> a==>apple
				 b==>day0301
				 c==>div+img
		h1 h2 h3 鼠标移入移出
	
	双击事件   加倍  减半
	图片
	
	
第四章 JQuery操作DOM(选择器.方法体系)
4.1 JQ DOM HTML--->自带属性，文本，值等(style)
	html()   text()  val()  attr()  show()  hide()
	总结：
		前四个是双用方法，无参便是获取，但是attr()需要指明获取哪一个属性的值
		有参便是设置，空串表示清空
4.2 JQ DOM NODE--->有效和灵活的补充html()
	1)创建一个节点(标签对象)
		a、工厂函数--->(不是选择器，更不是JS对象，而是HTML内容)
		语法：
			var $p=$("html内容");
		案例：
			var $p=$("<p>新的段落</p>");
		妙用：
			通常用来克隆
		案例：
			var $p=$("<p></p>").html();
			var $p=$("<p></p>").text();
		b、混搭 JS JQ
		案例：
			var p=document.createElement("p");
			var $p=$(p);
		案例：只复制图片和段落
	2)关联
		第一组：主动方法  主动关联
		1)父子档
			01 append(); 添加子标签(追加，末尾)
		    语法：
		          父节点.append(子节点);
			02 prepend();前插，首部
			语法：
				父节点.prepend(子节点);
		2)兄弟档
			01 after()
			节点A把节点B添加在它的后面
				A.after(B);
			02 before()
			节点A把节点B添加在它的前面
				A.before(B);
		第二组：被动方法
		1)父子档
			01 appendTo()
			语法案例：
				子对象.appendTo(父节点)--->子节点被追加至父节点末尾
			02 prependTo()
			语法案例：
				子对象.prependTo(父节点)--->子节点被追加至父节点首部
		2)兄弟档
			01 insertAfter();
			语法案例：
				兄弟A.insertAfter(兄弟B);--->节点A被添加至节点B的后面
			01 insertAfter();
			语法案例：
				兄弟A.insertBefore(兄弟B);--->节点A被添加至节点B的前面
	3)删除
		remove()--->移除节点
		empty()--->清空节点内容
		语法：
			当前节点.删除方式();
	4)查找
		1)父子遍历
			parent();--->获取父节点对象
			parents();--->全部的父节点对象
			语法：
				当前节点对象.方法  --> 返回节点对象，数组
				children()--->获取子节点对象
				find()--->获取子孙节点对象
		2)兄弟遍历
			01  next()   02  prev()  
			03  nextAll()--->同辈的下面的全部标签对象，基于同一个父节点
			04  prevAll()--->...上面...
			05  siblings()--->除了它之外的所有的同辈节点对象
				语法：
					当前节点.方法      01 02 返回节点对象     其他数组
4.3 JQ DOM CSS
	1、css()
	2、addClass(样式名)--->添加样式
	3、removeClass(样式名)--->移除样式
		2、3语法：
		jq.方法(内部样式表类样式名称_abc)
			class=abc       style .abc{}
					
总结：
JQ选择器和过滤器--->找标签对象
JQ方法体系：重要的方法--->做什么
	JQ DOM HTML--->html()  text()  attr()   val()
	JQ DOM CSS--->css()   addClass()    removeClass()
	JQ DOM EVENT--->event.which  关键字和JS稍微不同    this.事件方法
	JQ DOM NODE--->创建、关联、遍历					
					
				 	
第五章 JQuery高级补充(表单验证+验证码) 
5.1 联动
5.2 表单验证+验证码
	备注：
		js验证--->单一函数同一验证
		验证提交--->单一函数--->success做分支跳转
							   fail不提交，反馈信息
		jq验证--->事件驱动验证
		验证提交--->查看每个组件的验证结果--->success 做分支跳转
						(事件驱动)				   fail不提交，反馈信息
						
		foucs-->输入控件获取焦点，提示反馈
		blur--->输入控件失去焦点，做当次验证，结果及时反馈
==========================JQuery END===========================================================================
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			